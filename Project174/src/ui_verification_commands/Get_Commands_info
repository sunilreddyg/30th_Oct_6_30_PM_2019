UI_Verification commands:-->
	
		=> In selenium all verification commands
		start with getkeyword.
		
		=> These commands capture application original
			behaviour at runtime and store behaviour
			into userdefined reference variables.
				
		=>  After capture  actual behaviour at automation browser
			we can compare with expected behaviour inorder to validate
			test output.
			
		 Page verification commands:-->
		 		These commands verify expected pages displayed
		 		at automation browser.
		 		
		 		getTitle
		 		getCurrentUrl
		 		getPageSource
		 		getWindowHandle
		 		getWindowHandles
		 		
		 Element verification commands:-->
		 		These commands verify expected element bahaviour preseted
		 		at targeted location.
		 		
		 		getText
		 		getAttribute
		 		getCssvalue
		 		getLocation
		 		getSize
		 		getTagname
		 		getRect	
===========================================================================	 		
getTitle:--->
			method capture current window title at runtime.
			In webpapplication every page contain indepedent title.
		
			Syntax:-->
					String Runtime_title=driver.getTitle();
					System.out.println(Runtime_title);				
====================================================================		
getCurrenturl:-->
				method capture current window Url at runtime.
				In web application every page contains uniqe URL.
			
			Syntax:-->
					String Runtime_url=driver.getCurrentUrl();
					System.out.println(Runtime_url);				
========================================================
getPageSource:--->	
			Method capture Entire pageSource into String format
			during runtime.  [Backend HTML source]
			
			With in soruce we can verify
					Title of a page
					url of a page
					Element ID's  &  HMTL Nodes 
					page Text
		
			String pageSource=driver.getpageSource();
			System.out.println(pageSoruce);
==========================================
getwindowhandle:---->
	
		Method return runtime dynamic ID of current window.			
		Method helps to swicth window controls at runtime.
		
		String window_Id=driver.getwindowHandle();
		System.out.println(window_Id);
================================================================		
getwindowhandles:-->
		Method capture all window Runtime ID's opened throw
		webdriver script.
		
		Set<String> allwidows=driver.getWindowhandles();
		
		Note:--> above method we use to switch between windows.
================================================================		 		
gettext:-->
		  Method capture text presented at location, it only
		  capture visible text at webpage...!
		  
		  Syntax:-->
		  
		  		WebElement Element=driver.findElement(By.id("LocationID"));
				String Element_innerText=Element.getText();
				System.out.println(Element_innerText);	
				
			Note:-->
				1. If Element not contain innertext method return
						empty status.
						
				2. IF selected element text hidden at webpage method 
						return empty status.
						
				3. It capture selected element and it's child elemnets
						innertext...	
=========================================================================
getAttribute("propertyname");
	
	Method capture runtime attribute value using attributename.
				  
				  
		Syntax:-->  
		  	WebElement Element=driver.findElement(By.id("x"));
		  	String Attribute_value=Element.getAttribute("attributename");
		  	System.out.println(Attribute_value);	
		  	
				  	
  	Note:--> Developer use attributes, to chanage runtime
  			behaviour of element. by capture element attributes
  			at runtime we can prove element behaviour available
			w.r.t client requirement.
			
			
		  					
				
				
				
				
				
						
				